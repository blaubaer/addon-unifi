name: Continuous Integration

env:
  REGISTRY: ghcr.io

on:
  push:
    branches:
      - mainmain
  pull_request:
    branches:
      - mainmain
  release:
    types:
      - released

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: [ "unifi" ]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Resolve references
        id: refs
        run: |
          set -ex
          push="false"
          ref=$(echo "${{ github.ref_name }}" | sed -E "s/^v([0-9]+(\.[0-9]+)*)(-.+)?$/\1/")
          prefix="${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.addon }}"
          imageTags="${prefix}:${ref}"

          if [ "${{ github.event_name }}" == "release" ]; then
            imageTags="${imageTags},${prefix}:latest,${prefix}:stable"
            push="true"
          fi

          if [[ "${{ github.ref_name }}" =~ "^v([0-9]+(\.[0-9]+)*)(-.+)?$" ]]; then
            push="true"
          fi

          echo "REGISTRY_IMAGE_TAGS=${imageTags}" >> $GITHUB_ENV
          echo "REGISTRY_PUSH=${push}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        id: build
        uses: docker/build-push-action@v6
        with:
          context: "./${{ matrix.addon }}"
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ env.REGISTRY_PUSH }}
          tags: ${{ env.REGISTRY_IMAGE_TAGS }}

  announce:
    name: Announce changes
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Update files
        run: |
          set -ex
          ref=$(echo "${{ github.ref_name }}" | sed -E "s/^v([0-9]+(\.[0-9]+)*)(-.+)?$/\1/")
          for addon in "unifi"; do
            sed -i -E "s/^(version: ).+$/\1${ref}/" "$addon/config.yaml"
            git add "$addon/config.yaml"
          done
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Release announcement of ${ref}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.head_ref }}
